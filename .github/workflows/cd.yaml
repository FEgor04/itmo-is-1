name: ci

on:
  push:
    branches: [ "main", "62-ansible-cd" ]

jobs:
  image-frontend:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - name: create stub .env
        run: touch .env
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_TOKEN }} docker.io
      - name: Build frontend
        run: REGISTRY_URI=${{ secrets.DOCKER_REGISTRY }} make build-frontend
      - name: Push frontend
        run: REGISTRY_URI=${{ secrets.DOCKER_REGISTRY }} make push-frontend


  image-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_TOKEN }} docker.io
      - name: create stub .env
        run: touch .env
      - name: Build backend
        run: REGISTRY_URI=${{ secrets.DOCKER_REGISTRY }} make build-backend
      - name: Push backend
        run: REGISTRY_URI=${{ secrets.DOCKER_REGISTRY }} make push-backend

  deploy-staging:
    needs:
      - image-frontend
      - image-backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up ssh key
        run: |
          mkdir -p ~/.ssh && \
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/cloudru-efedorov && \
          chmod 600 ~/.ssh/cloudru-efedorov && \
          ssh-keyscan lab1.efedorov.spb.su >> ~/.ssh/known_hosts
      - name: Deploy with ansible
        working-directory: ./ansible
        run: >
          ansible-playbook staging.yaml --extra-vars "
          registry_uri=${{ secrets.DOCKER_REGISTRY }}
          jwt_secret=${{ secrets.JWT_SECRET }}
          postgres_user=${{ secrets.STAGING_POSTGRES_USER }}
          postgres_password=${{ secrets.STAGING_POSTGRES_PASSWORD }}
          postgres_db=${{ secrets.STAGING_POSTGRES_DB }}
          postgres_host=postgres:5432
          jwt_secret=${{ secrets.JWT_SECRET }}
          jwt_access_ttl=3600000
          jwt_refresh_ttl=2592000000"
